# ARGUMENTS --------------------------------------------------------------------
##
# Base Container version
# Using Flutter v3.22.0
##
ARG SDK_BASE_VERSION=early
##
# Base container version
##
ARG BASE_VERSION=runtime_debug

##
# Board architecture
##
ARG IMAGE_ARCH=

##
# Directory of the application inside container
##s
ARG APP_ROOT=

# BUILD/DEPLOY -----------------------------------------------------------------------
##
# Build/Deploy Step
##
FROM crossware.app:5050/public-repos/flutter:${SDK_BASE_VERSION} as build

ARG IMAGE_ARCH
ARG GPU
ARG APP_ROOT

COPY . ${APP_ROOT}
WORKDIR ${APP_ROOT}
RUN flutter-elinux clean; flutter-elinux pub get; flutter-elinux build elinux --debug

FROM crossware.app:5050/public-repos/flutter:${BASE_VERSION} as final
ARG APP_ROOT

WORKDIR ${APP_ROOT}

COPY --chown=torizon:torizon run.sh ${APP_ROOT}/ 
ENV LD_LIBRARY_PATH=/opt/flutter-elinux

COPY --from=build ${APP_ROOT}/build/elinux/arm64/debug/bundle/ ${APP_ROOT}/bundle

ENV FLUTTER_DRM_DEVICE="/dev/dri/card0:/dev/dri/card1"
ENV APP_PATH=${APP_ROOT}/bundle
RUN chmod +x ${APP_ROOT}/run.sh
CMD ["run.sh"]
# BUILD/DEPLOY -----------------------------------------------------------------------

